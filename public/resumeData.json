{
  "main": {
    "name": "Derek Niess",
    "occupation": "Software Engineer",
    "description": "who recently graduated with a BS in Computer Engineering from the University of Illinois at Urbana-Champaign where I explored sub-disciplines in Artificial Intelligence, Distributed Computing, Database Management Systems, and Operating Systems",
    "image": "profile-rounded.png",
    "bio": "Fun fact: the first program I ever made was with my friends in high school where we programmed a bot for a popular MMO called RuneScape to automate in-game level grinding without having to spend hundreds of hours at the computer doing it ourselves. We got the idea to start a small operation creating and selling maxed out character profiles in 3rd-party online gaming marketplaces. It was a hugely rewarding experience, and ever since then I have been hooked on software development and entertaining an entrepeneurial mindset. ",
    "contactmessage": "Feel free to call/text me any time between 9 a.m. to 6 p.m. M-F, or send me an email.",
    "email": "derekniess96@gmail.com",
    "phone": "630-606-2890",
    "address": {
      "city": "Chicago",
      "state": "Illinois"
    },
    "website": "http://www.derekniess.com",
    "resumedownload": "http://derekniess.com",
    "social": [
      {
        "name": "linkedin",
        "url": "https://www.linkedin.com/in/derek-niess-128a34126/",
        "className": "fa fa-linkedin"
      },
      {
        "name": "github",
        "url": "http://github.com/derekniess",
        "className": "fa fa-github"
      }
    ]
  },
  "resume": {
    "skillheadline": "Backend web development and parallel programming are my bread and butter",
    "skillmessage": ", though I also have a solid foundation in data science, cyber-physical systems, and operating systems as a result of professional and academic study. Cumulatively, I have been building web apps, primarily in Python and Javascript, for around 3 years now. Throughout that time, I have developed with a handful of frameworks and database systems, many of which are listed below. If you have a particular library or framework that you are looking for, there's a chance I've worked with it, and if not I'm confident that I have the related underlying experience to start applying it in no time!",
    "education": [
      {
        "school": "University of Illinois at Urbana-Champaign",
        "degree": "Bachelor of Science in Computer Engineering",
        "graduated": "May 2020",
        "description": "Graduated with an overall GPA of 3.64"
      }
    ],
    "work": [
      {
        "company": "Beacon LLC",
        "title": "Founder",
        "years": "Feb 2020 - present",
        "description": "I architected and am currently marketing a patent-pending mobile application for smartwatch devices designed as a 3D guidance system to help navigate mountaineers, surfers, and divers out of natural disasters such as avalanches, cave-ins, and wipe-outs as well as any other orientation-deprived situation where the user needs to know the quickest route to the surface. Given the safety-critical and mission-critical nature of the app, I wrote scripts to perform 1000's of simulations on sensor data as per tolerance analysis to ensure a maximal margin of error of 5 degrees is met based on the most inaccurate commercial sensors I could find. The app is heavily designed with multi-threading and parallel GPU computing in mind, as this provides the most energy-efficient use of computation power for embedded systems. While I don't want to give away too many details, developing the app involved dedicated research into sensor fusion algorithms, accelerated 3D graphics, iOS and Android (Java) development, and optimized parallel processing."
      },
      {
        "company": "Monument Labs Inc.",
        "title": "Software Developer Intern",
        "years": "June 2019 - Aug 2019",
        "description": "Upon joining Monument's team for the summer, I immediately began completing tickets and receiving daily peer-reviews per their CI/CD workflow for new releases of Monument's proprietary software--all of which was debugged on an embedded Linux machine over an SSH connection. Some examples of my work include: 1) designing relational schema and scripts to perform database migrations on 1,000,000+ records with zero downtime on a MySQL version that does not inherently allow online alterations 2) developing automated unit/regression test suites in PyTest and Unittest responsible for checking 100+ test cases on Monument's main backend API as they relate to all scopes of testing in quality control 3) incorporating real-time user analytics data pipeline into flagship devices by implementing a background ETL service that continuously aggregates and streams new user data from 1,000s of users to AWS Kinesis 4) implementing multi-threaded event handling for external storage device processes such as initialization, insertion, removal, firmware updates, and read/write errors."
      },
      {
        "company": "University of Illinois at Urbana-Champaign",
        "title": "AI Research Team Member",
        "years": "Jan 2019 - May 2019",
        "description": "I was asked by my Real-Time Systems professor, Lui Sha, to join his research team as they explored new system architectures aimed at improving the security and reliability of Autonomous Vehicular systems. We ultimately decided to base our system on Simplex architecture, a control system design that is now heavily used in safety-critical control software responsible for auto-piloting commercial Boeing airplanes. I was a part of the sub-team responsible for implementing the Simplex controller. Personally, I aided in constructing a simulated autonomous robot model for testing new iterations of our AV system designs by configuring ROS packages and developing custom hardware simulation APIs in C++ within the Gazebo framework. I also implemented steering and actuator controllers with PID feedback controls in C++ for the vehicle's secondary navigation system to greatly stabilize motion mechanics and protect against anomalies in sensor fusion data streams."
      },
      {
        "company": "Switchboard Apparatus Inc.",
        "title": "Engineer Intern & Senior Engineer Intern",
        "years": "May 2016 - Aug 2016 & June 2017 - Aug 2017",
        "description": "Though there are plenty of daily responsibilities and other team projects to talk about that I worked on throughout the two summers I interned at SAI, the most exciting challenge we were given was a summer-long R&D team project where the interns and I: 1) conducted our own research on the manufacturing department to determine potential areas of improvement 2) pitched a practical solution of one of those areas to the department managers 3) designed a prototype of that solution over the course of the summer. After careful research, we began designing a Computer Numerical Control (CNC) router specifically for automating the process of cutting insulation material. Early on, I was voted to be the team lead, where I was responsible for interfacing between departmental managers and making sure we were on track with our project deadlines. Beyond that, I was personally responsible for architecting the control system of our prototype CNC router. This involved writing a G-code interpreter in C++ from scratch with its own instruction set that described and controlled precisely how the servo motors and spindle operated in 3D space as it executed within a synchronous/asynchronous state machine. I also had to implement a Python script that the interpreter used to convert mechanical design schematics to executable G-code."
      }
    ],
    "skills": [
      {
        "name": "Python",
        "image": "python-c.png",
        "experience": "~3-4 years",
        "description": "Python is my go-to language for data modeling / analysis / visualization and general scripting--building ETL pipelines, constructing ML models, writing data wrangling scripts, you name it. I use NumPy, Pandas, and Matplotlib frequently for data-driven tasks. I also have strong experience developing backend apps and APIs across multiple Python web frameworks within both medium-scale (250,000+ lines) and small-scale codebases.",
        "tech": [
          {
            "name": "Django",
            "type": "Framework",
            "image": "django.png"
          },
          {
            "name": "Flask",
            "type": "Framework",
            "image": "flask.png"
          },
          {
            "name": "Bottle",
            "type": "Framework",
            "image": "bottle.png"
          }
        ]
      },
      {
        "name": "Javascript",
        "image": "js-c.png",
        "experience": "~3 years",
        "description": "Whenever I have the chance, I will typically choose Javascript for UI design. Having used Javascript since high school and given that it is arguably the most well-documented language for web development, it's always a fun and relatively painless process tinkering around with new Javascript frameworks for my projects' frontend design. React is currently my favorite. In fact, I built this website using React!",
        "tech": [
          {
            "name": "React.js",
            "type": "Framework",
            "image": "react.png"
          },
          {
            "name": "Bootstrap",
            "type": "Framework",
            "image": "bootstrap.png"
          },
          {
            "name": "Node.js",
            "type": "Environment",
            "image": "nodejs.png"
          }
        ]
      },
      {
        "name": "Java",
        "image": "java-c.png",
        "experience": "~2 years",
        "garbage": "One of the more complex projects I've used Java for is building a distributed system that simulates the network architecture of the stock market.",
        "description": "The more I learn about system design patterns, the more I've found myself appreciating Java for how strongly it enforces object-oriented design. I've used Java for various course projects, mobile app development, and message-based apps over the last few years, working almost exclusively in Eclipse in an SE runtime environment. I particularly look forward to using J2EE for enterprise distributed systems in the future that.",
        "tech": [
          {
            "name": "Maven",
            "type": "Build Automation",
            "image": "maven.png"
          },
          {
            "name": "Gradle",
            "type": "Build Automation",
            "image": "gradle.png"
          },
          {
            "name": "ActiveMQ",
            "type": "Messaging Service",
            "image": "activemq.png"
          }
        ]
      },
      {
        "name": "C++",
        "image": "cplusplus-c.png",
        "experience": "~3-4 years",
        "garbage": "High performance computing, embedded systems, real-time systems, GPU parallel programming",
        "description": "While there are certainly ways around performance bottlenecks with scripting languages like Python, I typically write applications and libraries that demand high performance / careful use of limited resources in C++. For that reason, all of my parallel computing and (embedded) real-time programming is done in C++. My experience with C++ spans from professional to academic to personal use over several projects.",
        "tech": [
          {
            "name": "CUDA",
            "type": "Platform / API",
            "image": "cuda.png"
          },
          {
            "name": "OpenGL",
            "type": "API",
            "image": "opengl.png"
          },
          {
            "name": "Visual Studio",
            "type": "IDE",
            "image": "visualstudio.png"
          }
        ]
      },
      {
        "name": "C",
        "image": "c-c.png",
        "experience": "~2 years",
        "description": "As a software engineering major, I've taken a curriculum of courses that dive deep into low-level design. C and x86 assembly were the primary tools we used. Some examples include building my own operating system from scratch in C and x86, developing C applications for FPGAs in conjunction with System Verilog, and C-style socket programming for distributed systems. I have no problem getting my hands dirty with bare metal code.",
        "tech": [
          {
            "name": "Embedded C",
            "type": "Language Extension",
            "image": "embeddedC.png"
          },
          {
            "name": "x86",
            "type": "Language",
            "image": "assembly.png"
          },
          {
            "name": "Make",
            "type": "Build Automation",
            "image": "makefile.png"
          }
        ]
      },
      {
        "name": "SQL / NoSQL",
        "image": "database.png",
        "experience": "~2-3 years",
        "garbage": "talk about database systems class. SQLite for embedded. AWS for web apps I host on EC2 and beanstalk, as it provides easy security and management.",
        "description": "Beyond having experience formulating advanced SQL / NoSQL queries and schemas, I also have a strong understanding of how to exploit underlying DBMS architecture to achieve better performance. I've taken coursework in database system design--relational, document, graph--and I have invested many hours throughout my recent internship and building web APIs into researching DBMS-specific design patterns / resource management strategies for performance optimization. Though not listed below, I also have experience with cloud-based distributed databases such as AWS RDS and DynamoDB.",
        "tech": [
          {
            "name": "MySQL",
            "type": "Database",
            "image": "mysql.png"
          },
          {
            "name": "PostGreSQL",
            "type": "Database",
            "image": "postgresql.png"
          },
          {
            "name": "MongoDB",
            "type": "Database",
            "image": "mongodb.png"
          }
        ]
      }
    ]
  },
  "portfolio": {
    "projects": [
      {
        "title": "3D Physics Engine",
        "category": "View Source Code",
        "image": "slowmo_boxes-edit.gif",
        "url": "https://derekniess.github.io/3D-Physics-Engine/"
      },
      {
        "title": "Pathfinding Algo Visualizer",
        "category": "View Project",
        "image": "path_demo-edit.gif",
        "url": "https://pathfinding-visualizer.herokuapp.com/#"
      },
      {
        "title": "Trading System",
        "category": "View Source Code",
        "image": "trade_monitor-edit2.jpg",
        "url": "https://derekniess.github.io/Trading-System/"
      },
      {
        "title": "Beacon Navigator",
        "category": "View Demo",
        "image": "beacon_demo-edit2.gif",
        "url": "https://www.youtube.com/watch?v=cZ6ynCBAhJ4&feature=youtu.be"
      },
      {
        "title": "Homebrew Operating System",
        "category": "View Source Code",
        "image": "homebrew_os-edit2.png",
        "url": "https://github.com/derekniess/homebrew-OS"
      }
    ]
  },
  "testimonials": {
    "testimonials": [
      {
        "text": "That Derek Niess must be one of the most brilliant developers I've ever met! It is amazing that nobody has hired him yet. Hey you, you should hire this guy, he may be fresh out of University but I am confident that he will be one of your best developers in no time!",
        "user": "Steve Wozniak... impersonator"
      }
    ]
  }
}